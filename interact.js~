var svg = document.getElementById("vector");
var width = svg.getAttribute("width");
var height = svg.getAttribute("height");
var r = 20;
var rid = 0;

var circleClick = function(e) {
    if (this.getAttribute("fill") == "green") {
	this.setAttribute("fill", "blue");
    } else if (this.getAttribute("fill") == "blue") {
	svg.removeChild(this);
	var newX = Math.random() * (width - 2 * r) + r;
	var newY = Math.random() * (height - 2 * r) + r;
	var newDot = makeDot( newX, newY );
	newDot.addEventListener("click", circleClick);
	svg.appendChild( newDot );
    }
    e.stopPropagation();
}

var makeDot = function(x, y) {       
    var c = document.createElementNS("http://www.w3.org/2000/svg", "circle");
    c.setAttribute("cx", x);
    c.setAttribute("cy", y);
    c.setAttribute("r", r);
    c.setAttribute("fill", "green");
    c.addEventListener("click", circleClick);
    return c;
}

var drawDot = function(e) {
    if ( this == e.target ) {
	var dot = makeDot( e.offsetX, e.offsetY );
	svg.appendChild( dot );
    }
}


var move = function() {
    window.cancelAnimationFrame( rid );
    
    var screensaver = function() {
		var dots = svg.children;
		var dx = 1;
		var dy = 1;
		for (var i = 0; i < dots.length; i+1){
			var dvd = function(e) {
				console.log(rid);
				dots[i].setAttribute("x",x);
				dots[i].setAttribute("y",y);
				x += dx;
				y += dy;
				if(x <= 0 || x >= width-r){
					dx *= -1;
				}
				if(y <= 0 || y >= height-r){
					dy *= -1;
				}
				rid = window.requestAnimationFrame(dvd);
			};
		dvd();
		}
    }
    screensaver();
    
};



var clear = function(e) {
    while (svg.lastChild){
	svg.removeChild(svg.lastChild);
    }
};

var clearBtn = document.getElementById("clear_btn");
clearBtn.addEventListener("click", clear);

svg.addEventListener("click", drawDot, true);

var moveBtn = document.getElementById("move_btn");
moveBtn.addEventListener("click", move);
